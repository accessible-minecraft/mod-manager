/*
 * The MIT License
 *
 * Copyright 2021 shoaib.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package com.shoaibkhan.modmanager.gui.dialog;

import java.io.File;
import javax.swing.JFileChooser;

/**
 *
 * @author shoaib
 */
public class FolderChooserDialog extends javax.swing.JDialog {

    private String directory = null;
    private boolean hasChoosen = false;

    public FolderChooserDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public String choose() {
        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL); // This stops the thread when setVisible(true) is called
        setVisible(true);

        if (hasChoosen && directory != null) {
            return directory;
        }

        return null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        container = new javax.swing.JPanel();
        row1 = new javax.swing.JPanel();
        folderPathInput = new javax.swing.JTextField();
        showDialogButton = new com.shoaibkhan.modmanager.gui.widgets.base.BaseButton();
        jPanel2 = new javax.swing.JPanel();
        confirmButton = new com.shoaibkhan.modmanager.gui.widgets.base.BaseButton();
        cancelButton = new com.shoaibkhan.modmanager.gui.widgets.base.BaseButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.FlowLayout());

        container.setLayout(new javax.swing.BoxLayout(container, javax.swing.BoxLayout.Y_AXIS));

        folderPathInput.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        folderPathInput.setText("Enter profile folder manually or use the browse button.");
        row1.add(folderPathInput);

        showDialogButton.setText("Browse");
        showDialogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showDialogButtonActionPerformed(evt);
            }
        });
        row1.add(showDialogButton);

        container.add(row1);

        confirmButton.setText("Confirm");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });
        jPanel2.add(confirmButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        jPanel2.add(cancelButton);

        container.add(jPanel2);

        getContentPane().add(container);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        // Close dialog and set has chosen to true
        hasChoosen = true;
        dispose();
        setVisible(false);
    }//GEN-LAST:event_confirmButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // Close dialog but don't set has chosen to true to set the response/return to -1
        dispose();
        setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void showDialogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showDialogButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
//        fileChooser.
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int option = fileChooser.showOpenDialog(this);
        if (option == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            folderPathInput.setText(file.getAbsolutePath());
            directory = file.getAbsolutePath();
        }
    }//GEN-LAST:event_showDialogButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FolderChooserDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FolderChooserDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FolderChooserDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FolderChooserDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FolderChooserDialog dialog = new FolderChooserDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.shoaibkhan.modmanager.gui.widgets.base.BaseButton cancelButton;
    private com.shoaibkhan.modmanager.gui.widgets.base.BaseButton confirmButton;
    private javax.swing.JPanel container;
    private javax.swing.JTextField folderPathInput;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel row1;
    private com.shoaibkhan.modmanager.gui.widgets.base.BaseButton showDialogButton;
    // End of variables declaration//GEN-END:variables
}
